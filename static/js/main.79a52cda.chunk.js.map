{"version":3,"sources":["images/default.png","images/logo.png","images/Angelo.jpg","images/audio-spectrum.gif","components/utils/firebase.js","components/create.js","components/utils/modal.js","components/header.js","components/streaming.js","components/utils/iframe.js","components/anime.js","components/list.js","components/chat.js","components/search.js","components/admin.js","App.js","serviceWorker.js","components/redux/reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","CreateAnime","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createSong","bind","assertThisInitialized","songsRef","database","ref","child","storage","name","document","getElementById","value","type","number","image","itemLoaderCounter","form","itemLoader","style","display","file","files","uploadImg","put","on","snapshot","progress","bytesTransferred","totalBytes","innerText","error","getDownloadURL","then","url","id","push","key","songData","inList","date","Date","updateSong","concat","update","reset","err","console","log","_this2","react_default","a","createElement","className","placeholder","accept","onClick","e","preventDefault","Component","Modal","props","modalType","transform","show","opacity","close","create_CreateAnime","Header","src","logo","alt","href","react_fontawesome_index_es","icon","Streaming","loadData","state","songNow","songNext","songsArray","orderByChild","equalTo","songList","forEach","snap","song","val","anime","sort","b","setState","frameborder","allowfullscreen","scrolling","height","width","backgroundImage","equalizer","Anime","removeSongFromList","now","songInList","imageSrc","animeName","songName","songID","List","songs","map","i","anime_Anime","Chat","Search","searchSong","getInputValue","inputValue","target","text","startAt","limitToFirst","once","_this3","onChange","getSongInfo","addSongToList","Admin","openModalHandler","isShowing","modal","getElementsByClassName","length","closeModalHandler","renderForm","userImage","modal_Modal","library","add","faTimesCircle","faPlusSquare","faTrashAlt","faEdit","faExchangeAlt","fab","App","containers","PerfectScrollbar","wheelSpeed","wheelPropagation","minScrollbarLength","admin_Admin","header_Header","streaming_Streaming","list_List","chat_Chat","search_Search","Boolean","window","location","hostname","match","initialState","reducer","arguments","undefined","action","newState","objectSpread","store","createStore","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.79a52cda.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.ace320ea.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.b909e3c1.png\";","module.exports = __webpack_public_path__ + \"static/media/Angelo.7f91d966.jpg\";","module.exports = __webpack_public_path__ + \"static/media/audio-spectrum.01c8c17a.gif\";","// Importing Firebase\nimport * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyAjKp_f5F1Tp22oJGQscVHQ6YYgXQH02VE\",\n  authDomain: \"anime-sama-radio.firebaseapp.com\",\n  databaseURL: \"https://anime-sama-radio.firebaseio.com\",\n  projectId: \"anime-sama-radio\",\n  storageBucket: \"anime-sama-radio.appspot.com\",\n  messagingSenderId: \"709190102912\"\n}\n\nfirebase.initializeApp(config);\n\nexport default firebase","import React, { Component } from 'react';\n\nimport defaultAnimeImage from '../images/default.png';\n\nimport firebase from './utils/firebase';\n\nexport default class CreateAnime extends Component {\n\n    constructor() {\n        super();\n        //this.updateMessage = this.updateMessage.bind(this);\n        //this.submitMessage = this.submitMessage.bind(this);\n        this.createSong = this.createSong.bind(this);\n    }\n\n    createSong(){\n\n        const songsRef = firebase.database().ref().child('songs'),\n            storage = firebase.storage().ref().child('img')\n\n        let name = document.getElementById('create-anime-text').value,\n            type = document.getElementById('create-anime-select').value,\n            number = document.getElementById('create-anime-number').value,\n            image = document.getElementById('create-anime-image'),\n            itemLoaderCounter = document.getElementById('item-loader-counter'),\n            form = document.getElementById('create-anime-form'),\n            itemLoader = document.getElementById('item-loader')\n\n\n        try {\n            itemLoader.style.display = 'flex'\n    \n        let file = image.files[0],\n            fileRef = storage.child(file.name),\n            uploadImg = fileRef.put(file)\n    \n        uploadImg.on('state_changed', function(snapshot){\n            // Observe state change events such as progress, pause, and resume\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            itemLoaderCounter.innerText = 'Creando canción...  '+ progress+'%'\n    \n            }, function(error) {\n            itemLoader.style.display = 'none'\n            }, function() {\n            // Handle successful uploads on complete\n            uploadImg.snapshot.ref.getDownloadURL().then( url => {\n    \n                let id = songsRef.push().key,\n                    songData = {\n                        name: name,\n                        type: type,\n                        number: number,\n                        image: url,\n                        inList: true,\n                        date: new Date()\n                    },\n                    updateSong = {}\n            \n                updateSong[`/${id}`] = songData\n                \n                songsRef.update(updateSong)\n                form.reset()\n                itemLoader.style.display = 'none'\n    \n            });\n            });\n    \n        }catch(err){\n            itemLoader.style.display = 'none'\n        }\n\n        console.log('Canción creada')\n\n    }\n\n    render(){\n        return(\n            <div className=\"Create-anime-component\">\n                <form className=\"Create-anime-form\" id=\"create-anime-form\">\n                    <input id=\"create-anime-text\" type='text' placeholder='Nombre del Animu'/>\n                    <select id=\"create-anime-select\">\n                        <option>Opening</option>\n                        <option>Ending</option>\n                    </select>\n                    <input id=\"create-anime-number\" type='number' placeholder='#' />\n                    <input id=\"create-anime-image\" type='file' accept='image/x-png,image/gif,image/jpeg'/>\n                    <div id=\"item-loader\">\n                        <span id=\"item-loader-counter\"></span>\n                    </div>\n                    <input onClick={e => {e.preventDefault();this.createSong()}} type=\"submit\" value=\"Confirmar\"/>\n                </form>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\r\n\r\nimport '../../css/utils/modal.css';\r\n\r\nimport CreateAnime from '../create'\r\n\r\nimport firebase from './firebase';\r\n\r\n\r\nexport default class Modal extends Component {\r\n\r\n    makeAction(type){\r\n\r\n        switch(this.props.modalType){\r\n            case 'Crear':\r\n            const key = firebase.database().ref('songs/').push().key\r\n        }\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        let node\r\n\r\n        console.log(this.props.modalType)\r\n        switch(this.props.modalType){\r\n            case 'Crear':\r\n                node = `\r\n                <form>\r\n                    <input type='text' placeholder='Nombre del Animu'/>\r\n                    <select>\r\n                        <option>Opening</option>\r\n                        <option>Ending</option>\r\n                    </select>\r\n                    <input type='number' placeholder='#' />\r\n                    <input type='image'/>\r\n                </form>\r\n                `\r\n                break\r\n            case 'Editar':\r\n                node = `\r\n                <form>\r\n                    <input type='text' placeholder='Editar animu'/>\r\n                    <select>\r\n                        <option>Opening</option>\r\n                        <option>Ending</option>\r\n                    </select>\r\n                    <input type='number' placeholder='#' />\r\n                    <input type=\"image\"/>\r\n                </form>\r\n                `\r\n                break\r\n            case 'Eliminar':\r\n                node = `\r\n                <form>\r\n                    <input type='text' placeholder='Eliminar Animu'/>\r\n                    <select>\r\n                        <option>Opening</option>\r\n                        <option>Ending</option>\r\n                    </select>\r\n                    <input type='number' placeholder='#' />\r\n                </form>\r\n                `\r\n                break\r\n            default:\r\n                node = 'No hay formulario aquí'\r\n        }\r\n        \r\n\r\n        return(\r\n            \r\n            <div className=\"modal\">\r\n                <div className=\"modal-wrapper\"\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    <div className=\"modal-header\">\r\n                        <h3>{this.props.modalType} Canción</h3>\r\n                        <span className=\"close-modal-btn\" onClick={this.props.close}>×</span>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n\r\n                        <CreateAnime />\r\n\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport logo from '../images/logo.png';\nimport userImage from '../images/Angelo.jpg';\n\nimport Modal from './utils/modal';\n\nexport default class Header extends Component {\n\n    render(){\n        \n\n        return(\n            \n            <header className=\"App-header\">\n                <figure>\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <figcaption>Anime Sama Radio</figcaption>\n                </figure>\n                <nav>\n                    <ul>\n                        <a className=\"App-link\" href=\"/\"><FontAwesomeIcon icon={['fab', 'discord']} /></a>\n                        <a className=\"App-link\" href=\"/\"><FontAwesomeIcon icon={['fab', 'twitch']} /></a>\n                        <a className=\"App-link\" href=\"/\"><FontAwesomeIcon icon={['fab', 'youtube']} /></a>\n                    </ul>\n                </nav>\n            </header>\n\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport defaultAnimeImage from '../images/default.png';\nimport equalizer from '../images/audio-spectrum.gif';\n\nimport Iframe from '../components/utils/iframe';\n\nimport firebase from './utils/firebase';\n\nexport default class Streaming extends Component {\n\n    constructor() {\n        super();\n        //this.updateMessage = this.updateMessage.bind(this);\n        //this.submitMessage = this.submitMessage.bind(this);\n        this.loadData = this.loadData.bind(this);\n        this.state = {\n            songNow: [],\n            songNext: []\n        }\n    }\n\n    componentDidMount() {\n        this.loadData()\n    }\n\n    loadData() {\n\n        let songsArray = []\n\n        firebase.database().ref('songs/').orderByChild('inList').equalTo(true).on('value', songList => {\n            songsArray = []\n            songList.forEach(function(snap) {\n                var song = snap.val();\n\n                songsArray.push({\n                    anime: song.name,\n                    type: `${song.type} ${song.number}`,\n                    image: song.image,\n                    date: song.date\n                })\n            })\n\n            songsArray.sort(function(a, b) { \n                return new Date(a.date) - new Date(b.date);\n            })\n\n            this.setState({\n                songNow: songsArray[0],\n                songNext: songsArray[1]\n            })\n            \n            console.log(this.state.songNow,this.state.songNext)\n        })\n    }\n\n    render(){\n        const songNow = this.state.songNow\n\n        if(songNow) {\n\n        return(\n            <section className=\"App-streaming\">\n                <div className=\"App-streaming-header\">\n                    <div className=\"App-streaming-header-item Anime-component\">\n                        <span className=\"now-listening-tag\">Ahora estás escuchando:</span>\n                        <img src={songNow.image}/>\n                        <p>\n                            <h4>{songNow.anime}</h4>\n                            <span>{songNow.type} {songNow.number}</span>\n                        </p>\n                    </div>\n                    <a className=\"App-streaming-header-switcher App-link\" href=\"/\"><FontAwesomeIcon icon=\"exchange-alt\" /></a>\n                </div>\n                <div className=\"App-streaming-body\">\n                    <div className=\"App-streaming-body-player\">\n                    <iframe src=\"https://player.twitch.tv/?channel=mirainosoramusic\" frameborder=\"0\" allowfullscreen=\"true\" scrolling=\"no\" height=\"440\" width=\"100%\"></iframe>\n                    </div>\n                    <div style={{ backgroundImage: `url(${songNow.image})` }} className=\"App-streaming-body-audio\">\n                        <div className=\"App-streaming-body-audio-content\">\n                            <img src={equalizer} />\n                            <p>\n                            <h2>{songNow.anime}</h2>\n                            <span>{songNow.type} {songNow.number}</span>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n\n        }else{\n\n            return( \n                <section className=\"App-streaming\">\n                <div className=\"App-streaming-header\">\n                    <div className=\"App-streaming-header-item Anime-component\">\n                        <p>No hay canciones en lista</p>\n                    </div>\n                    <a className=\"App-streaming-header-switcher App-link\" href=\"/\"><FontAwesomeIcon icon=\"exchange-alt\" /></a>\n                </div>\n                <div className=\"App-streaming-body\">\n                    <div className=\"App-streaming-body-player\">\n                    <iframe src=\"https://player.twitch.tv/?channel=mirainosoramusic\" frameborder=\"0\" allowfullscreen=\"true\" scrolling=\"no\" height=\"440\" width=\"100%\"></iframe>\n                    </div>\n                    <div className=\"App-streaming-body-audio\">\n                        <div className=\"App-streaming-body-audio-content\">\n                            <img src={equalizer} />\n                            <p>\n                                <h2>Anime Sama Radio</h2>\n                                <span>La mejor música anime solo aquí</span>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            )\n        }\n    }\n}","import React, { Component } from 'react';\n\nexport default class Iframe extends Component {\n\n    render(){\n        return(\n            <div>          \n                <iframe src={this.props.src} height={this.props.height} width={this.props.width}/>         \n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport defaultAnimeImage from '../images/default.png';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport firebase from './utils/firebase';\nimport { timeout } from 'q';\n\nexport default class Anime extends Component {\n\n    constructor() {\n        super();\n        //this.updateMessage = this.updateMessage.bind(this);\n        //this.submitMessage = this.submitMessage.bind(this);\n        this.removeSongFromList = this.removeSongFromList.bind(this);\n    }\n\n    removeSongFromList(id) {\n\n\n        firebase.database().ref('songs/' + id).update({\n            inList: false,\n            date: Date.now()\n        })\n        \n    }\n\n    render(){\n        return(\n            <div className={\"Anime-component \" + (this.props.songInList ? 'song-in-list': 'song-not-in-list')}>\n                <div className=\"Anime-component-body\">\n                    <img src={this.props.imageSrc} />\n                    <p>\n                        <h4>{this.props.animeName}</h4>\n                        <span>{this.props.songName}</span>\n                    </p>\n                </div>\n                <button onClick={e => {this.removeSongFromList(this.props.songID)}}><FontAwesomeIcon icon=\"times-circle\" /></button>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport defaultAnimeImage from '../images/default.png';\n\nimport Anime from './anime';\n\nimport firebase from './utils/firebase';\n\nexport default class List extends Component {\n\n    constructor() {\n        super();\n        //this.updateMessage = this.updateMessage.bind(this);\n        //this.submitMessage = this.submitMessage.bind(this);\n        this.loadData = this.loadData.bind(this);\n        this.state = {\n            songs: []\n        }\n    }\n\n    componentDidMount() {\n        this.loadData()\n    }\n\n    loadData() {\n\n        let songsArray = []\n\n        firebase.database().ref('songs/').orderByChild('inList').equalTo(true).on('value', songList => {\n            songsArray = []\n            songList.forEach(function(snap) {\n                let song = snap.val();\n                let key = snap.key\n                console.log(key)\n                songsArray.push({\n                    id: key,\n                    anime: song.name,\n                    type: `${song.type} ${song.number}`,\n                    image: song.image,\n                    date: song.date\n                })\n            })\n\n            songsArray.sort(function(a, b) { \n                return new Date(a.date) - new Date(b.date);\n            })\n\n            this.setState({\n                songs: songsArray\n            })\n            \n        })\n    }\n\n    render() {\n\n        //const currentSongs = this.state.songs.map((el, i) => <li key={i}>{el.anime}</li>);\n\n        return(\n            <section className=\"App-list\">\n                <div className=\"App-list-header\">\n                    <a>En cola</a>\n                    <a>Sugeridos</a>\n                    <a>Reproducidos</a>\n                </div>\n                <div id=\"container\" className=\"container App-list-body\">\n                    { this.state.songs.map( (song,i) => {\n                        if(song) {\n\n                            return <Anime key={i} songID={song.id} imageSrc={song.image} animeName={song.anime} songName={song.type} />\n                        \n                        }else {\n\n                            return( 'No hay canciones en lista' )\n\n                        }\n                    })}\n                </div>\n            </section>\n\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport Anime from './anime';\n\nexport default class Chat extends Component {\n\n    render(){\n        return(\n            <section className=\"App-chat\">\n                <iframe src=\"https://www.twitch.tv/embed/mirainosoramusic/chat?darkpopout\"\n                frameborder=\"0\"\n                scrolling=\"no\"\n                height=\"500\"\n                width=\"100%\"></iframe>\n            </section>\n\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport defaultAnimeImage from '../images/default.png';\n\nimport Anime from './anime';\n\nimport firebase from './utils/firebase';\n\nexport default class Search extends Component {\n\n    constructor() {\n        super();\n        //this.updateMessage = this.updateMessage.bind(this);\n        //this.submitMessage = this.submitMessage.bind(this);\n        this.searchSong = this.searchSong.bind(this);\n        this.getInputValue = this.getInputValue.bind(this);\n        this.state = {\n            songs: [],\n            inputValue: ''\n        }\n    }\n\n    getInputValue(e) {\n\n        this.setState({\n            inputValue: e.target.value\n        })\n\n        this.searchSong(e)\n    }\n\n    searchSong(e) {\n\n        let songsArray = []\n\n        const text = this.state.inputValue\n\n        if(e) {\n\n            firebase.database().ref('songs/').orderByChild('name').startAt(text).limitToFirst(10).on('value', songList => {\n                songsArray = []\n                songList.forEach(function(snap) {\n                    let song = snap.val()\n                    let key = snap.key\n    \n                    songsArray.push({\n                        id: key,\n                        anime: song.name,\n                        type: `${song.type} ${song.number}`,\n                        image: song.image,\n                        date: song.date,\n                        inList: song.inList\n                    })\n                })\n    \n                this.setState({\n                    songs: songsArray\n                })\n                \n            })\n\n        }\n        \n    }\n\n    addSongToList(id) {\n\n        firebase.database().ref('songs/' + id).update({\n            inList: true,\n            date: Date.now()\n        })\n    }\n\n    getSongInfo(id) {\n        firebase.database().ref('songs/' + id).once(\"value\", function(snapshot) {\n            let key = snapshot.key;\n            let song = snapshot.val();\n            \n          });\n    }\n\n    render(){\n        return(\n            <section className=\"App-search\">\n                <div className=\"App-search-header\">\n                    <form>\n                        <input id=\"search-song\" onChange={e => this.getInputValue(e)} type=\"text\" placeholder=\"Pide una canción...\" />\n                    </form>\n                </div>\n                <div id=\"container2\" className=\"App-search-body container\">\n                    { this.state.songs.map( (song,i) => {\n                        return <div onClick={e => {if(this.props.getSongInfo){this.getSongInfo(song.id)}else{this.addSongToList(song.id)}}}><Anime songInList={song.inList} key={i} imageSrc={song.image} animeName={song.anime} songName={song.type} /></div>\n                    })}\n                </div>\n            </section>\n\n        );\n    }\n}","import React, { Component } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport logo from '../images/logo.png';\r\nimport userImage from '../images/Angelo.jpg';\r\n\r\nimport Modal from './utils/modal';\r\n\r\nexport default class Admin extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.renderForm = this.renderForm.bind(this);\r\n        this.state = {\r\n            isShowing: false,\r\n            modalType: ''\r\n        }\r\n    }\r\n\r\n    openModalHandler = () => {\r\n        this.setState({\r\n            isShowing: true\r\n        });\r\n\r\n        const modal = document.getElementsByClassName('modal')\r\n\r\n        for (let i = 0; i < modal.length; i++) {\r\n            modal[i].style.display= 'inherit'\r\n            \r\n        }\r\n    }\r\n\r\n    closeModalHandler = () => {\r\n        this.setState({\r\n            isShowing: false\r\n        });\r\n\r\n        const modal = document.getElementsByClassName('modal')\r\n\r\n        for (let i = 0; i < modal.length; i++) {\r\n            modal[i].style.display= 'none'\r\n            \r\n        }\r\n    }\r\n\r\n    renderForm(type) {\r\n        \r\n\r\n        this.setState({\r\n            modalType: type\r\n        }, this.openModalHandler())\r\n    }\r\n\r\n    render(){\r\n        \r\n\r\n        return(\r\n            \r\n            <div className=\"App-header Admin-panel\">\r\n                { this.state.isShowing ? <div onClick={this.closeModalHandler} className=\"back-drop\"></div> : null }\r\n                <p className=\"Admin-panel-title\">Admin panel</p>\r\n                <nav>\r\n                    <ul>\r\n                        <a className=\"App-link open-modal-btn\" onClick={e => {this.renderForm('Crear')}}>\r\n                        <FontAwesomeIcon icon=\"plus-square\" />\r\n                        </a>\r\n                        <a className=\"App-link open-modal-btn\" onClick={e => {this.renderForm('Editar')}}><FontAwesomeIcon icon=\"edit\" /></a>\r\n                        <a className=\"App-link open-modal-btn\" onClick={e => {this.renderForm('Eliminar')}}><FontAwesomeIcon icon=\"trash-alt\" /></a>\r\n                    </ul>\r\n                    <p className=\"Admin-panel-name\">\r\n                    <span>Bienvenido, Anghelo</span> <img src={userImage} alt=\"Usuario\" />\r\n                    </p>\r\n                </nav>\r\n                <Modal\r\n                    modalType={this.state.modalType}\r\n                    show={this.state.isShowing}\r\n                    close={this.closeModalHandler}>\r\n                        Maybe aircrafts fly very high because they don't want to be seen in plane sight?\r\n                </Modal>    \r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTimesCircle, faPlusSquare, faTrashAlt, faEdit, faExchangeAlt, faYoutube, faDiscord, faTwitch } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n\nimport './css/App.css';\nimport './css/perfect-scrollbar.css';\nimport PerfectScrollbar from 'perfect-scrollbar';\n\n// Importing local components\nimport Header from './components/header';\nimport Streaming from './components/streaming';\nimport List from './components/list';\nimport Chat from './components/chat';\nimport Search from './components/search';\nimport Admin from './components/admin';\n\n// FontAwesome Icons \nlibrary.add(faTimesCircle);\nlibrary.add(faPlusSquare);\nlibrary.add(faTrashAlt);\nlibrary.add(faEdit);\nlibrary.add(faExchangeAlt);\nlibrary.add(fab);\n\n\nclass App extends Component {\n\n  componentDidMount () {\n    const containers = document.getElementsByClassName('container');\n    for (let i = 0; i < containers.length; i++) {\n      const ps = new PerfectScrollbar(containers[i], {\n        wheelSpeed: 2,\n        wheelPropagation: false,\n        minScrollbarLength: 20\n      });\n    }\n    \n\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Admin />\n        <Header />\n        <main>\n          <Streaming />\n          <List />\n          <Chat />\n          <Search />\n        </main>\n        <footer className=\"App-footer\">\n          <p>Anime Sama © 2018 - Amamos las buenas historias</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    songs: []\n};\n\nconst reducer = (state=initialState, action) => {\n    const newState = {...state};\n\n    switch(action.type){\n        case 'ADD_SONG_IN_LIST': \n            newState.songs = [];\n            break;\n        \n        case 'REMOVE_SONG_FROM_LIST': \n            newState.songs = [];\n            break;\n    }\n    return newState;\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './components/redux/reducer'\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n<Provider store={ store }>\n    <App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}