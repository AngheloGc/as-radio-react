{"version":3,"sources":["images/default.png","images/logo.png","images/Angelo.jpg","images/audio-spectrum.gif","components/utils/firebase.js","components/utils/modal.js","components/header.js","components/streaming.js","components/utils/iframe.js","components/anime.js","components/list.js","components/chat.js","components/search.js","components/create.js","components/edit.js","components/delete.js","components/admin.js","App.js","serviceWorker.js","components/redux/reducer.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Modal","react_default","a","createElement","className","style","transform","this","props","show","opacity","modalType","onClick","close","formType","Component","Header","src","logo","alt","target","href","react_fontawesome_index_es","icon","Streaming","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","loadData","bind","assertThisInitialized","state","songNow","songNext","els","document","getElementsByClassName","i","length","classList","toggle","_this2","songsArray","database","ref","orderByChild","equalTo","on","songList","forEach","snap","song","val","push","anime","name","type","concat","number","image","date","sort","b","Date","setState","console","log","_this3","e","toogleStream","backgroundImage","equalizer","Anime","removeSongFromList","id","update","inList","now","songInList","imageSrc","animeName","songName","songID","List","songs","key","map","anime_Anime","Chat","frameborder","scrolling","height","width","Search","handleSubmit","preventDefault","stopPropagation","searchSong","getSongInfo","getInputValue","inputValue","value","text","startAt","limitToFirst","once","snapshot","getElementById","textContent","display","message","styles","flexDirection","justifyContent","alignItems","padding","fontWeight","undefined","onSubmit","onChange","placeholder","fromModalType","addSongToList","CreateAnime","createSong","songsRef","child","storage","itemLoaderCounter","form","itemLoader","file","files","uploadImg","put","progress","bytesTransferred","totalBytes","innerText","error","getDownloadURL","then","url","songData","updateSong","reset","err","accept","EditAnime","event","URL","createObjectURL","search_Search","for","showEditImagePreview","EditSong","DeleteAnime","remove","deleteSong","Admin","openModalHandler","isShowing","body","overflow","modal","closeModalHandler","renderForm","node","create_CreateAnime","edit_EditAnime","delete_DeleteAnime","userImage","modal_Modal","library","add","faTimesCircle","faPlusSquare","faTrashAlt","faEdit","faExchangeAlt","fab","faHeadphonesAlt","App","containers","PerfectScrollbar","wheelSpeed","wheelPropagation","minScrollbarLength","admin_Admin","header_Header","streaming_Streaming","list_List","chat_Chat","Boolean","window","location","hostname","match","initialState","reducer","arguments","action","newState","objectSpread","store","createStore","ReactDOM","render","es","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,6YCcxCC,gBATe,CACbC,OAAQ,0CACRC,WAAY,mCACZC,YAAa,0CACbC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,iBAKNN,QCRMO,mLAIb,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXC,MAAO,CACHC,UAAWC,KAAKC,MAAMC,KAAO,kBAAoB,qBACjDC,QAASH,KAAKC,MAAMC,KAAO,IAAM,MAErCR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,UAAKI,KAAKC,MAAMG,UAAhB,eACAV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAkBQ,QAASL,KAAKC,MAAMK,OAAtD,SAEJZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAEVG,KAAKC,MAAMM,UAGhBb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BArBAW,aCCdC,mLAKb,OAEIf,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cACdH,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,OAAKc,IAAKC,IAAMd,UAAU,WAAWe,IAAI,SACzClB,EAAAC,EAAAC,cAAA,uCAEJF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGiB,OAAO,SAAShB,UAAU,WAAWiB,KAAK,8BAA6BpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,cACzGtB,EAAAC,EAAAC,cAAA,KAAGiB,OAAO,SAAShB,UAAU,WAAWiB,KAAK,0CAAyCpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,aACrHtB,EAAAC,EAAAC,cAAA,KAAGiB,OAAO,SAAShB,UAAU,WAAWiB,KAAK,2CAA0CpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAiBC,KAAM,CAAC,MAAO,wBAhB1GR,6CCEfS,GCTeT,wBDWhC,SAAAS,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAAiB,IACVC,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAvB,QAGKwB,SAAWN,EAAKM,SAASC,KAAdN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAChBA,EAAKS,MAAQ,CACTC,QAAS,GACTC,SAAU,IAPJX,8EAeV,IAFA,IAAMY,EAAMC,SAASC,uBAAuB,6BAEnCC,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAC5BH,EAAIG,GAAGE,UAAUC,OAAO,2DAM5BpC,KAAKwB,8CAGE,IAAAa,EAAArC,KAEHsC,EAAa,GAEjBpD,EAASqD,WAAWC,IAAI,UAAUC,aAAa,UAAUC,SAAQ,GAAMC,GAAG,QAAS,SAAAC,GAC/EN,EAAa,GACbM,EAASC,QAAQ,SAASC,GACtB,IAAIC,EAAOD,EAAKE,MAEhBV,EAAWW,KAAK,CACZC,MAAOH,EAAKI,KACZC,KAAI,GAAAC,OAAKN,EAAKK,KAAV,KAAAC,OAAkBN,EAAKO,QAC3BC,MAAOR,EAAKQ,MACZC,KAAMT,EAAKS,SAInBlB,EAAWmB,KAAK,SAAS9D,EAAG+D,GACxB,OAAO,IAAIC,KAAKhE,EAAE6D,MAAQ,IAAIG,KAAKD,EAAEF,QAGzCnB,EAAKuB,SAAS,CACVhC,QAASU,EAAW,GACpBT,SAAUS,EAAW,KAGzBuB,QAAQC,IAAIzB,EAAKV,MAAMC,QAAQS,EAAKV,MAAME,6CAI1C,IAAAkC,EAAA/D,KACE4B,EAAU5B,KAAK2B,MAAMC,QAE3B,OAAGA,EAGClC,EAAAC,EAAAC,cAAA,WAASC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAhB,8BACAH,EAAAC,EAAAC,cAAA,OAAKc,IAAKkB,EAAQ2B,QAClB7D,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,UAAKgC,EAAQsB,OACbxD,EAAAC,EAAAC,cAAA,YAAOgC,EAAQwB,KAAf,IAAsBxB,EAAQ0B,UAGtC5D,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAyCQ,QAAS,SAAA2D,GAAMD,EAAKE,iBAAiBvE,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAiBC,KAAK,mBAErHtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAEfH,EAAAC,EAAAC,cAAA,OAAKE,MAAO,CAAEoE,gBAAe,OAAAb,OAASzB,EAAQ2B,MAAjB,MAA6B1D,UAAU,4BAChEH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,OAAKc,IAAKyD,MACVzE,EAAAC,EAAAC,cAAA,SACAF,EAAAC,EAAAC,cAAA,UAAKgC,EAAQsB,OACbxD,EAAAC,EAAAC,cAAA,YAAOgC,EAAQwB,KAAf,IAAsBxB,EAAQ0B,aAW1C5D,EAAAC,EAAAC,cAAA,WAASC,UAAU,iBACnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACXH,EAAAC,EAAAC,cAAA,uCAEJF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yCAAyCQ,QAASL,KAAKiE,gBAAgBvE,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAiBC,KAAK,mBAE9GtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,OAAKc,IAAKyD,MACVzE,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,iEA7GOY,cEFlB4D,qBAEjB,SAAAA,IAAc,IAAAlD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAAoE,IACVlD,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAiD,GAAA7C,KAAAvB,QAGKqE,mBAAqBnD,EAAKmD,mBAAmB5C,KAAxBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAJhBA,kFAOKoD,GAGfpF,EAASqD,WAAWC,IAAI,SAAW8B,GAAIC,OAAO,CAC1CC,QAAQ,EACRhB,KAAMG,KAAKc,yCAKX,IAAApC,EAAArC,KACJ,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAW,oBAAsBG,KAAKC,MAAMyE,WAAa,eAAgB,qBAC1EhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKc,IAAKV,KAAKC,MAAM0E,WACrBjF,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,UAAKI,KAAKC,MAAM2E,WAChBlF,EAAAC,EAAAC,cAAA,YAAOI,KAAKC,MAAM4E,YAG1BnF,EAAAC,EAAAC,cAAA,UAAQS,QAAS,SAAA2D,GAAM3B,EAAKgC,mBAAmBhC,EAAKpC,MAAM6E,UAAUpF,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAiBC,KAAK,0BA7BvER,cCDduE,cAEjB,SAAAA,IAAc,IAAA7D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAA+E,IACV7D,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAA4D,GAAAxD,KAAAvB,QAGKwB,SAAWN,EAAKM,SAASC,KAAdN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAChBA,EAAKS,MAAQ,CACTqD,MAAO,IAND9D,mFAWVlB,KAAKwB,8CAGE,IAAAa,EAAArC,KAEHsC,EAAa,GAEjBpD,EAASqD,WAAWC,IAAI,UAAUC,aAAa,UAAUC,SAAQ,GAAMC,GAAG,QAAS,SAAAC,GAC/EN,EAAa,GACbM,EAASC,QAAQ,SAASC,GACtB,IAAIC,EAAOD,EAAKE,MACZiC,EAAMnC,EAAKmC,IACfpB,QAAQC,IAAImB,GACZ3C,EAAWW,KAAK,CACZqB,GAAIW,EACJ/B,MAAOH,EAAKI,KACZC,KAAI,GAAAC,OAAKN,EAAKK,KAAV,KAAAC,OAAkBN,EAAKO,QAC3BC,MAAOR,EAAKQ,MACZC,KAAMT,EAAKS,SAInBlB,EAAWmB,KAAK,SAAS9D,EAAG+D,GACxB,OAAO,IAAIC,KAAKhE,EAAE6D,MAAQ,IAAIG,KAAKD,EAAEF,QAGzCnB,EAAKuB,SAAS,CACVoB,MAAO1C,uCAUf,OACI5C,EAAAC,EAAAC,cAAA,WAASC,UAAU,YACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,0BAEJF,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,YAAYzE,UAAU,2BACxBG,KAAK2B,MAAMqD,MAAME,IAAK,SAACnC,EAAKd,GAC1B,OAAGc,EAEQrD,EAAAC,EAAAC,cAACuF,EAAD,CAAOF,IAAKhD,EAAG6C,OAAQ/B,EAAKuB,GAAIK,SAAU5B,EAAKQ,MAAOqB,UAAW7B,EAAKG,MAAO2B,SAAU9B,EAAKK,OAI3F,uCAjEF5C,aCJb4E,mLAGb,OACI1F,EAAAC,EAAAC,cAAA,WAASC,UAAU,YACfH,EAAAC,EAAAC,cAAA,UAAQc,IAAI,+DACZ2E,YAAY,IACZC,UAAU,KACVC,OAAO,MACPC,MAAM,iBATYhF,aCMbiF,cAEjB,SAAAA,IAAc,IAAAvE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAAyF,IACVvE,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAsE,GAAAlE,KAAAvB,QA4FJ0F,aAAe,SAAC1B,GAEZA,EAAE2B,iBACF3B,EAAE4B,mBA5FF1E,EAAK2E,WAAa3E,EAAK2E,WAAWpE,KAAhBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAClBA,EAAK4E,YAAc5E,EAAK4E,YAAYrE,KAAjBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACnBA,EAAK6E,cAAgB7E,EAAK6E,cAActE,KAAnBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KACrBA,EAAKS,MAAQ,CACTqD,MAAO,GACPgB,WAAY,IATN9E,6EAaA8C,GAEVhE,KAAK4D,SAAS,CACVoC,WAAYhC,EAAEnD,OAAOoF,QAGzBjG,KAAK6F,WAAW7B,sCAGTA,GAAG,IAAA3B,EAAArC,KAENsC,EAAa,GAEX4D,EAAOlG,KAAK2B,MAAMqE,WAErBhC,GAEC9E,EAASqD,WAAWC,IAAI,UAAUC,aAAa,QAAQ0D,QAAQD,GAAME,aAAa,IAAIzD,GAAG,QAAS,SAAAC,GAC9FN,EAAa,GACbM,EAASC,QAAQ,SAASC,GACtB,IAAIC,EAAOD,EAAKE,MACZiC,EAAMnC,EAAKmC,IAEf3C,EAAWW,KAAK,CACZqB,GAAIW,EACJ/B,MAAOH,EAAKI,KACZC,KAAI,GAAAC,OAAKN,EAAKK,KAAV,KAAAC,OAAkBN,EAAKO,QAC3BC,MAAOR,EAAKQ,MACZC,KAAMT,EAAKS,KACXgB,OAAQzB,EAAKyB,WAIrBnC,EAAKuB,SAAS,CACVoB,MAAO1C,4CASTgC,GAEVpF,EAASqD,WAAWC,IAAI,SAAW8B,GAAIC,OAAO,CAC1CC,QAAQ,EACRhB,KAAMG,KAAKc,4CAIPH,EAAIlE,GAGZlB,EAASqD,WAAWC,IAAI,SAAW8B,GAAI+B,KAAK,QAAS,SAASC,GAC1D,IAAIrB,EAAMqB,EAASrB,IACflC,EAAOuD,EAAStD,MAEJ,UAAb5C,IAEC2B,SAASwE,eAAe,qBAAqBN,MAAQlD,EAAKI,KAC1DpB,SAASwE,eAAe,uBAAuBN,MAAQlD,EAAKK,KAC5DrB,SAASwE,eAAe,uBAAuBN,MAAQlD,EAAKO,QAGhD,YAAblD,IACC2B,SAASwE,eAAe,qBAAqBC,YAAczD,EAAKI,KAChEpB,SAASwE,eAAe,qBAAqBC,YAAczD,EAAKK,KAChErB,SAASwE,eAAe,uBAAuBC,YAAc,IAAMzD,EAAKO,QAG5EvB,SAASwE,eAAe,0BAA0B7F,IAAMqC,EAAKQ,MAC7DxB,SAASwE,eAAe,qBAAqBzG,MAAM2G,QAAU,OAC7D1E,SAASwE,eAAe,cAAczG,MAAM2G,QAAU,OACtD1E,SAASwE,eAAe,uBAAuBN,MAAQhB,qCAavD,IAAAlB,EAAA/D,KAEA0G,EAAU,GACVC,EAAS,CACLF,QAAS,OACTlB,OAAQ,OACRqB,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,QAAS,OACTC,WAAY,KAgBpB,OAZAnD,QAAQC,IAAI9D,KAAK2B,MAAMqD,MAAM,GAAGhF,KAAK2B,MAAMqD,MAAM,SAEvBiC,GAAvBjH,KAAK2B,MAAMqD,MAAM,IAEhB0B,EAAU,+CACVC,EAAOF,QAAU,SAGjBC,EAAU,GACVC,EAAOF,QAAU,QAIjB/G,EAAAC,EAAAC,cAAA,WAAS0E,GAAG,aAAazE,UAAU,cAC/BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,QAAMsH,SAAUlH,KAAK0F,cACjBhG,EAAAC,EAAAC,cAAA,SAAO0E,GAAG,cAAc6C,SAAU,SAAAnD,GAAC,OAAID,EAAKgC,cAAc/B,IAAIZ,KAAK,OAAOgE,YAAapH,KAAKC,MAAMoH,cAAgB,uBAAsB,6BAGhJ3H,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,aAAazE,UAAU,6BAEvBG,KAAK2B,MAAMqD,MAAME,IAAK,SAACnC,EAAKd,GACxB,OAAOvC,EAAAC,EAAAC,cAAA,OAAKS,QAAS,SAAA2D,GAASD,EAAK9D,MAAMoH,cAAetD,EAAK+B,YAAY/C,EAAKuB,GAAGP,EAAK9D,MAAMoH,eAAoBtD,EAAKuD,cAAcvE,EAAKuB,MAAO5E,EAAAC,EAAAC,cAACuF,EAAD,CAAOT,WAAY3B,EAAKyB,OAAQS,IAAKhD,EAAG0C,SAAU5B,EAAKQ,MAAOqB,UAAW7B,EAAKG,MAAO2B,SAAU9B,EAAKK,UAG3P1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBC,MAAO6G,GACvCjH,EAAAC,EAAAC,cAAA,SAAI8G,GACJhH,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAiBC,KAAK,6BA/IVR,aCJf+G,cAEjB,SAAAA,IAAc,IAAArG,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAAuH,IACVrG,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAoG,GAAAhG,KAAAvB,QAGKwH,WAAatG,EAAKsG,WAAW/F,KAAhBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAJRA,4EASV,IAAMuG,EAAWvI,EAASqD,WAAWC,MAAMkF,MAAM,SAC7CC,EAAUzI,EAASyI,UAAUnF,MAAMkF,MAAM,OAEzCvE,EAAOpB,SAASwE,eAAe,qBAAqBN,MACpD7C,EAAOrB,SAASwE,eAAe,uBAAuBN,MACtD3C,EAASvB,SAASwE,eAAe,uBAAuBN,MACxD1C,EAAQxB,SAASwE,eAAe,sBAChCqB,EAAoB7F,SAASwE,eAAe,uBAC5CsB,EAAO9F,SAASwE,eAAe,qBAC/BuB,EAAa/F,SAASwE,eAAe,eAGzC,IACIuB,EAAWhI,MAAM2G,QAAU,OAE/B,IAAIsB,EAAOxE,EAAMyE,MAAM,GAEnBC,EADUN,EAAQD,MAAMK,EAAK5E,MACT+E,IAAIH,GAE5BE,EAAUtF,GAAG,gBAAiB,SAAS2D,GAGnC,IAAI6B,EAAY7B,EAAS8B,iBAAmB9B,EAAS+B,WAAc,IACnET,EAAkBU,UAAY,0BAAwBH,EAAS,KAE5D,SAASI,GACZT,EAAWhI,MAAM2G,QAAU,QACxB,WAEHwB,EAAU3B,SAAS9D,IAAIgG,iBAAiBC,KAAM,SAAAC,GAE1C,IAAIpE,EAAKmD,EAASxE,OAAOgC,IACrB0D,EAAW,CACPxF,KAAMA,EACNC,KAAMA,EACNE,OAAQA,EACRC,MAAOmF,EACPlE,QAAQ,EACRhB,KAAM,IAAIG,MAEdiF,EAAa,GAEjBA,EAAU,IAAAvF,OAAKiB,IAAQqE,EAEvBlB,EAASlD,OAAOqE,GAChBf,EAAKgB,QACLf,EAAWhI,MAAM2G,QAAU,WAKlC,MAAMqC,GACHhB,EAAWhI,MAAM2G,QAAU,OAG/B5C,QAAQC,IAAI,sDAIR,IAAAzB,EAAArC,KACJ,OACIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoByE,GAAG,qBACnC5E,EAAAC,EAAAC,cAAA,SAAO0E,GAAG,oBAAoBlB,KAAK,OAAOgE,YAAY,qBACtD1H,EAAAC,EAAAC,cAAA,UAAQ0E,GAAG,uBACP5E,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,yBAEJF,EAAAC,EAAAC,cAAA,SAAO0E,GAAG,sBAAsBlB,KAAK,SAASgE,YAAY,MAC1D1H,EAAAC,EAAAC,cAAA,SAAO0E,GAAG,qBAAqBlB,KAAK,OAAO2F,OAAO,qCAClDrJ,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,eACJ5E,EAAAC,EAAAC,cAAA,QAAM0E,GAAG,yBAEb5E,EAAAC,EAAAC,cAAA,SAAOS,QAAS,SAAA2D,GAAMA,EAAE2B,iBAAiBtD,EAAKmF,cAAepE,KAAK,SAAS6C,MAAM,uBApF5DzF,aCEpBwI,+LAEIC,GACjBlH,SAASwE,eAAe,0BAA0B7F,IAAMwI,IAAIC,gBAAgBF,EAAMpI,OAAOmH,MAAM,uCAK/F,IAAMP,EAAWvI,EAASqD,WAAWC,MAAMkF,MAAM,SAC7CC,EAAUzI,EAASyI,UAAUnF,MAAMkF,MAAM,OAEzCvE,EAAOpB,SAASwE,eAAe,qBAAqBN,MACpD7C,EAAOrB,SAASwE,eAAe,uBAAuBN,MACtD3C,EAASvB,SAASwE,eAAe,uBAAuBN,MACxDhB,EAAMlD,SAASwE,eAAe,uBAAuBN,MACrD1C,EAAQxB,SAASwE,eAAe,sBAChCqB,EAAoB7F,SAASwE,eAAe,uBAC5CsB,EAAO9F,SAASwE,eAAe,qBAC/BuB,EAAa/F,SAASwE,eAAe,eAGzC,IACI,GAAGhD,EAAMyE,MAAM9F,OACX,IAEA,IAAI6F,EAAOxE,EAAMyE,MAAM,GAEnBC,EADUN,EAAQD,MAAMK,EAAK5E,MACT+E,IAAIH,GAE5BE,EAAUtF,GAAG,gBAAiB,SAAS2D,GAGnC,IAAI6B,EAAY7B,EAAS8B,iBAAmB9B,EAAS+B,WAAc,IACnET,EAAkBU,UAAY,2BAAyBH,EAAS,KAE7D,SAASI,GACZT,EAAWhI,MAAM2G,QAAU,QACxB,WAEHwB,EAAU3B,SAAS9D,IAAIgG,iBAAiBC,KAAM,SAAAC,GAE1C,IACIC,EAAW,CACPxF,KAAMA,EACNC,KAAMA,EACNE,OAAQA,EACRC,MAAOmF,GAEXE,EAAa,GAEjBA,EAAU,IAAAvF,OATD4B,IASc0D,EAEvBlB,EAASlD,OAAOqE,GAChBf,EAAKgB,QACL9G,SAASwE,eAAe,qBAAqBzG,MAAM2G,QAAU,OAC7D1E,SAASwE,eAAe,cAAczG,MAAM2G,QAAU,cAK7D,MAAMqC,GACHhB,EAAWQ,UAAY,iCAG1B,CAED,IAEIpJ,EAASqD,WAAWC,MAAMkF,MAAM,UAAYzC,GAAKV,OAAO,CACpDpB,KAAMA,EACNC,KAAMA,EACNE,OAAQA,IAEf,MAAMwF,GACHjF,QAAQC,IAAI,gBAGhBgE,EAAWhI,MAAM2G,QAAU,OAC3BqB,EAAWQ,UAAY,+BAM/B,MAAMQ,GACFhB,EAAWQ,WAAa,8CAG5BzE,QAAQC,IAAI,uDAIR,IAAA5C,EAAAlB,KAEJ,OACIN,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,iBAAiBzE,UAAU,0BAC/BH,EAAAC,EAAAC,cAACwJ,EAAD,CAAQ/B,cAAc,WACtB3H,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoByE,GAAG,qBACnC5E,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,2BACR5E,EAAAC,EAAAC,cAAA,SAAOyJ,IAAI,sBAAX,iBACA3J,EAAAC,EAAAC,cAAA,SAAOuH,SAAU,SAAAnD,GAAM9C,EAAKoI,qBAAqBtF,IAAIM,GAAG,qBAAqBlB,KAAK,OAAO2F,OAAO,qCAChGrJ,EAAAC,EAAAC,cAAA,SAAO0E,GAAG,oBAAoBlB,KAAK,OAAOgE,YAAY,qBACtD1H,EAAAC,EAAAC,cAAA,UAAQ0E,GAAG,uBACP5E,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,yBAEJF,EAAAC,EAAAC,cAAA,SAAO0E,GAAG,sBAAsBlB,KAAK,SAASgE,YAAY,MAC1D1H,EAAAC,EAAAC,cAAA,SAAO0E,GAAG,sBAAsBlB,KAAK,WACrC1D,EAAAC,EAAAC,cAAA,SAAOS,QAAS,SAAA2D,GAAMA,EAAE2B,iBAAiBzE,EAAKqI,YAAanG,KAAK,SAAS6C,MAAM,cAC/EvG,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,eACJ5E,EAAAC,EAAAC,cAAA,QAAM0E,GAAG,kCA9GM9D,aCAlBgJ,uLAIb,IAAM1B,EAAa/F,SAASwE,eAAe,eACvCtB,EAAMlD,SAASwE,eAAe,uBAAuBN,MAEzD/G,EAASqD,WAAWC,MAAMkF,MAAM,UAAYzC,GAAKwE,SAEjD3B,EAAWhI,MAAM2G,QAAU,OAC3BqB,EAAWQ,UAAY,4EAGnB,IAAApH,EAAAlB,KACJ,OACIN,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,iBAAiBzE,UAAU,0BAC/BH,EAAAC,EAAAC,cAACwJ,EAAD,CAAQ/B,cAAc,aACtB3H,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoByE,GAAG,qBACnC5E,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,+BACJ5E,EAAAC,EAAAC,cAAA,KAAG0E,GAAG,mBAAN,qDACA5E,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,2BACR5E,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAG0E,GAAG,sBACN5E,EAAAC,EAAAC,cAAA,QAAM0E,GAAG,sBACT5E,EAAAC,EAAAC,cAAA,QAAM0E,GAAG,0BAGjB5E,EAAAC,EAAAC,cAAA,SAAO0E,GAAG,sBAAsBlB,KAAK,WACrC1D,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,6BACJ5E,EAAAC,EAAAC,cAAA,SAAOwD,KAAK,SAAS6C,MAAM,oBAC3BvG,EAAAC,EAAAC,cAAA,SAAOS,QAAS,SAAA2D,GAAMA,EAAE2B,iBAAiBzE,EAAKwI,cAAetG,KAAK,SAAS6C,MAAM,gBAErFvG,EAAAC,EAAAC,cAAA,OAAK0E,GAAG,eACJ5E,EAAAC,EAAAC,cAAA,QAAM0E,GAAG,kCAjCQ9D,aCKpBmJ,cAEjB,SAAAA,IAAc,IAAAzI,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAnB,KAAA2J,IACVzI,EAAAC,OAAAE,EAAA,EAAAF,CAAAnB,KAAAmB,OAAAG,EAAA,EAAAH,CAAAwI,GAAApI,KAAAvB,QAQJ4J,iBAAmB,WACf1I,EAAK0C,SAAS,CACViG,WAAW,IAGf9H,SAAS+H,KAAKhK,MAAMiK,SAAW,SAI/B,IAFA,IAAMC,EAAQjI,SAASC,uBAAuB,SAErCC,EAAI,EAAGA,EAAI+H,EAAM9H,OAAQD,IAC9B+H,EAAM/H,GAAGnC,MAAM2G,QAAS,WAnBlBvF,EAwBd+I,kBAAoB,WAChB/I,EAAK0C,SAAS,CACViG,WAAW,IAKf,IAFA,IAAMG,EAAQjI,SAASC,uBAAuB,SAErCC,EAAI,EAAGA,EAAI+H,EAAM9H,OAAQD,IAC9B+H,EAAM/H,GAAGnC,MAAM2G,QAAS,OAI5B1E,SAAS+H,KAAKhK,MAAMiK,SAAW,UAE/BhI,SAASwE,eAAe,qBAAqBzG,MAAM2G,QAAU,OAC7D1E,SAASwE,eAAe,cAAczG,MAAM2G,QAAU,SArCtDvF,EAAKgJ,WAAahJ,EAAKgJ,WAAWzI,KAAhBN,OAAAO,EAAA,EAAAP,QAAAO,EAAA,EAAAP,CAAAD,KAClBA,EAAKS,MAAQ,CACTkI,WAAW,EACXzJ,UAAW,IALLc,0EA0CHkC,GAEP,IAAI+G,EAEJ,OAAO/G,GAEH,IAAK,QACD+G,EAAOzK,EAAAC,EAAAC,cAACwK,EAAD,MACP,MACJ,IAAK,SACDD,EAAOzK,EAAAC,EAAAC,cAACyK,EAAD,MACP,MACJ,IAAK,WACDF,EAAOzK,EAAAC,EAAAC,cAAC0K,EAAD,MACP,MACJ,QACIH,EAAO,GAGfnK,KAAK4D,SAAS,CACVrD,SAAU4J,EACV/J,UAAWgD,GACZpD,KAAK4J,qDAGJ,IAAAvH,EAAArC,KAEJ,OAEIN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACTG,KAAK2B,MAAMkI,UAAYnK,EAAAC,EAAAC,cAAA,OAAKS,QAASL,KAAKiK,kBAAmBpK,UAAU,cAAqB,KAC9FH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,eACAH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAA0BQ,QAAS,SAAA2D,GAAM3B,EAAK6H,WAAW,WACtExK,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAiBC,KAAK,iBAEtBtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAA0BQ,QAAS,SAAA2D,GAAM3B,EAAK6H,WAAW,YAAYxK,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAiBC,KAAK,UACxGtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAA0BQ,QAAS,SAAA2D,GAAM3B,EAAK6H,WAAW,cAAcxK,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAiBC,KAAK,gBAE9GtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,mCADA,IACiCF,EAAAC,EAAAC,cAAA,OAAKc,IAAK6J,IAAW3J,IAAI,cAG9DlB,EAAAC,EAAAC,cAAC4K,EAAD,CACIjK,SAAUP,KAAK2B,MAAMpB,SACrBH,UAAWJ,KAAK2B,MAAMvB,UACtBF,KAAMF,KAAK2B,MAAMkI,UACjBvJ,MAAON,KAAKiK,mBAJhB,4FAxFmBzJ,aCMnCiK,IAAQC,IAAIC,KACZF,IAAQC,IAAIE,KACZH,IAAQC,IAAIG,KACZJ,IAAQC,IAAII,KACZL,IAAQC,IAAIK,KACZN,IAAQC,IAAIM,KACZP,IAAQC,IAAIO,SAqCGC,8LA9BX,IADA,IAAMC,EAAapJ,SAASC,uBAAuB,aAC1CC,EAAI,EAAGA,EAAIkJ,EAAWjJ,OAAQD,IAC1B,IAAImJ,IAAiBD,EAAWlJ,GAAI,CAC7CoJ,WAAY,EACZC,kBAAkB,EAClBC,mBAAoB,sCAQxB,OACE7L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC4L,EAAD,MACA9L,EAAAC,EAAAC,cAAC6L,EAAD,MACA/L,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAC8L,EAAD,MACAhM,EAAAC,EAAAC,cAAC+L,EAAD,MACAjM,EAAAC,EAAAC,cAACgM,EAAD,MACAlM,EAAAC,EAAAC,cAACwJ,EAAD,OAEF1J,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,wEA3BQY,aChBEqL,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uFClBAC,EAAe,CACjBlH,MAAO,IAkBImH,EAfC,WAAgC,IAA/BxK,EAA+ByK,UAAAlK,OAAA,QAAA+E,IAAAmF,UAAA,GAAAA,UAAA,GAAzBF,EAAcG,EAAWD,UAAAlK,OAAA,EAAAkK,UAAA,QAAAnF,EACtCqF,EAAQnL,OAAAoL,EAAA,EAAApL,CAAA,GAAOQ,GAErB,OAAO0K,EAAOjJ,MACV,IAAK,mBAIL,IAAK,wBACDkJ,EAAStH,MAAQ,GAGzB,OAAOsH,GCPLE,EAAQC,YAAYN,GAE1BO,IAASC,OACTjN,EAAAC,EAAAC,cAACgN,EAAA,EAAD,CAAUJ,MAAQA,GACd9M,EAAAC,EAAAC,cAACiN,EAAD,OAEF9K,SAASwE,eAAe,SFkHpB,kBAAmBuG,WACrBA,UAAUC,cAAcC,MAAMvE,KAAK,SAAAwE,GACjCA,EAAaC","file":"static/js/main.ab4d6ae5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.ace320ea.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.b909e3c1.png\";","module.exports = __webpack_public_path__ + \"static/media/Angelo.7f91d966.jpg\";","module.exports = __webpack_public_path__ + \"static/media/audio-spectrum.01c8c17a.gif\";","// Importing Firebase\nimport * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport 'firebase/database';\n\nconst config = {\n  apiKey: \"AIzaSyAjKp_f5F1Tp22oJGQscVHQ6YYgXQH02VE\",\n  authDomain: \"anime-sama-radio.firebaseapp.com\",\n  databaseURL: \"https://anime-sama-radio.firebaseio.com\",\n  projectId: \"anime-sama-radio\",\n  storageBucket: \"anime-sama-radio.appspot.com\",\n  messagingSenderId: \"709190102912\"\n}\n\nfirebase.initializeApp(config);\n\nexport default firebase","import React, { Component } from 'react';\r\n\r\nimport '../../css/utils/modal.css';\r\n\r\n\r\nimport firebase from './firebase';\r\n\r\n\r\nexport default class Modal extends Component {\r\n\r\n    render(){\r\n\r\n        return(\r\n            \r\n            <div className=\"modal\">\r\n                <div className=\"modal-wrapper\"\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0vh)' : 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1' : '0'\r\n                    }}>\r\n                    <div className=\"modal-header\">\r\n                        <h3>{this.props.modalType} Canción</h3>\r\n                        <span className=\"close-modal-btn\" onClick={this.props.close}>×</span>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n\r\n                        {this.props.formType}\r\n\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport logo from '../images/logo.png';\nimport userImage from '../images/Angelo.jpg';\n\nimport Modal from './utils/modal';\n\nexport default class Header extends Component {\n\n    render(){\n        \n\n        return(\n            \n            <header className=\"App-header\">\n                <figure>\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <figcaption>Anime Sama Radio</figcaption>\n                </figure>\n                <nav>\n                    <ul>\n                        <a target=\"_blank\" className=\"App-link\" href=\"https://discord.gg/gTPkK3g\"><FontAwesomeIcon icon={['fab', 'discord']} /></a>\n                        <a target=\"_blank\" className=\"App-link\" href=\"https://www.twitch.tv/mirainosoramusic\"><FontAwesomeIcon icon={['fab', 'twitch']} /></a>\n                        <a target=\"_blank\" className=\"App-link\" href=\"https://www.youtube.com/c/animesamadesu\"><FontAwesomeIcon icon={['fab', 'youtube']} /></a>\n                    </ul>\n                </nav>\n            </header>\n\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport defaultAnimeImage from '../images/default.png';\nimport equalizer from '../images/audio-spectrum.gif';\n\nimport Iframe from '../components/utils/iframe';\n\nimport firebase from './utils/firebase';\n\nexport default class Streaming extends Component {\n\n    constructor() {\n        super();\n        //this.updateMessage = this.updateMessage.bind(this);\n        //this.submitMessage = this.submitMessage.bind(this);\n        this.loadData = this.loadData.bind(this);\n        this.state = {\n            songNow: [],\n            songNext: []\n        }\n    }\n\n    toogleStream() {\n\n        const els = document.getElementsByClassName('App-streaming-body-player')\n\n        for (let i = 0; i < els.length; i++) {\n            els[i].classList.toggle('appear-node')\n        }\n\n    }\n\n    componentDidMount() {\n        this.loadData()\n    }\n\n    loadData() {\n\n        let songsArray = []\n\n        firebase.database().ref('songs/').orderByChild('inList').equalTo(true).on('value', songList => {\n            songsArray = []\n            songList.forEach(function(snap) {\n                var song = snap.val();\n\n                songsArray.push({\n                    anime: song.name,\n                    type: `${song.type} ${song.number}`,\n                    image: song.image,\n                    date: song.date\n                })\n            })\n\n            songsArray.sort(function(a, b) { \n                return new Date(a.date) - new Date(b.date);\n            })\n\n            this.setState({\n                songNow: songsArray[0],\n                songNext: songsArray[1]\n            })\n            \n            console.log(this.state.songNow,this.state.songNext)\n        })\n    }\n\n    render(){\n        const songNow = this.state.songNow\n\n        if(songNow) {\n\n        return(\n            <section className=\"App-streaming\">\n                <div className=\"App-streaming-header\">\n                    <div className=\"App-streaming-header-item Anime-component\">\n                        <span className=\"now-listening-tag\">Ahora estás escuchando:</span>\n                        <img src={songNow.image}/>\n                        <p>\n                            <h4>{songNow.anime}</h4>\n                            <span>{songNow.type} {songNow.number}</span>\n                        </p>\n                    </div>\n                    <a className=\"App-streaming-header-switcher App-link\" onClick={e => {this.toogleStream()}}><FontAwesomeIcon icon=\"exchange-alt\" /></a>\n                </div>\n                <div className=\"App-streaming-body\">\n                    <div className=\"App-streaming-body-player\">\n                    </div>\n                    <div style={{ backgroundImage: `url(${songNow.image})` }} className=\"App-streaming-body-audio\">\n                        <div className=\"App-streaming-body-audio-content\">\n                            <img src={equalizer} />\n                            <p>\n                            <h2>{songNow.anime}</h2>\n                            <span>{songNow.type} {songNow.number}</span>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        );\n\n        }else{\n\n            return( \n                <section className=\"App-streaming\">\n                <div className=\"App-streaming-header\">\n                    <div className=\"App-streaming-header-item Anime-component\">\n                        <p>No hay canciones en lista</p>\n                    </div>\n                    <a className=\"App-streaming-header-switcher App-link\" onClick={this.toogleStream()}><FontAwesomeIcon icon=\"exchange-alt\" /></a>\n                </div>\n                <div className=\"App-streaming-body\">\n                    <div className=\"App-streaming-body-player\">\n                    </div>\n                    <div className=\"App-streaming-body-audio\">\n                        <div className=\"App-streaming-body-audio-content\">\n                            <img src={equalizer} />\n                            <p>\n                                <h2>Anime Sama Radio</h2>\n                                <span>La mejor música anime solo aquí</span>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            )\n        }\n    }\n}","import React, { Component } from 'react';\n\nexport default class Iframe extends Component {\n\n    render(){\n        return(\n            <div>          \n                <iframe src={this.props.src} height={this.props.height} width={this.props.width}/>         \n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport defaultAnimeImage from '../images/default.png';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport firebase from './utils/firebase';\nimport { timeout } from 'q';\n\nexport default class Anime extends Component {\n\n    constructor() {\n        super();\n        //this.updateMessage = this.updateMessage.bind(this);\n        //this.submitMessage = this.submitMessage.bind(this);\n        this.removeSongFromList = this.removeSongFromList.bind(this);\n    }\n\n    removeSongFromList(id) {\n\n\n        firebase.database().ref('songs/' + id).update({\n            inList: false,\n            date: Date.now()\n        })\n        \n    }\n\n    render(){\n        return(\n            <div className={\"Anime-component \" + (this.props.songInList ? 'song-in-list': 'song-not-in-list')}>\n                <div className=\"Anime-component-body\">\n                    <img src={this.props.imageSrc} />\n                    <p>\n                        <h4>{this.props.animeName}</h4>\n                        <span>{this.props.songName}</span>\n                    </p>\n                </div>\n                <button onClick={e => {this.removeSongFromList(this.props.songID)}}><FontAwesomeIcon icon=\"times-circle\" /></button>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport defaultAnimeImage from '../images/default.png';\n\nimport Anime from './anime';\n\nimport firebase from './utils/firebase';\n\nexport default class List extends Component {\n\n    constructor() {\n        super();\n        //this.updateMessage = this.updateMessage.bind(this);\n        //this.submitMessage = this.submitMessage.bind(this);\n        this.loadData = this.loadData.bind(this);\n        this.state = {\n            songs: []\n        }\n    }\n\n    componentDidMount() {\n        this.loadData()\n    }\n\n    loadData() {\n\n        let songsArray = []\n\n        firebase.database().ref('songs/').orderByChild('inList').equalTo(true).on('value', songList => {\n            songsArray = []\n            songList.forEach(function(snap) {\n                let song = snap.val();\n                let key = snap.key\n                console.log(key)\n                songsArray.push({\n                    id: key,\n                    anime: song.name,\n                    type: `${song.type} ${song.number}`,\n                    image: song.image,\n                    date: song.date\n                })\n            })\n\n            songsArray.sort(function(a, b) { \n                return new Date(a.date) - new Date(b.date);\n            })\n\n            this.setState({\n                songs: songsArray\n            })\n            \n        })\n    }\n\n    render() {\n\n        //const currentSongs = this.state.songs.map((el, i) => <li key={i}>{el.anime}</li>);\n\n        return(\n            <section className=\"App-list\">\n                <div className=\"App-list-header\">\n                    <a>En cola</a>\n                    <a>Sugeridos</a>\n                    <a>Reproducidos</a>\n                </div>\n                <div id=\"container\" className=\"container App-list-body\">\n                    { this.state.songs.map( (song,i) => {\n                        if(song) {\n\n                            return <Anime key={i} songID={song.id} imageSrc={song.image} animeName={song.anime} songName={song.type} />\n                        \n                        }else {\n\n                            return( 'No hay canciones en lista' )\n\n                        }\n                    })}\n                </div>\n            </section>\n\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport Anime from './anime';\n\nexport default class Chat extends Component {\n\n    render(){\n        return(\n            <section className=\"App-chat\">\n                <iframe src=\"https://www.twitch.tv/embed/mirainosoramusic/chat?darkpopout\"\n                frameborder=\"0\"\n                scrolling=\"no\"\n                height=\"500\"\n                width=\"100%\"></iframe>\n            </section>\n\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport defaultAnimeImage from '../images/default.png';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport Anime from './anime';\n\nimport firebase from './utils/firebase';\n\nexport default class Search extends Component {\n\n    constructor() {\n        super();\n        //this.updateMessage = this.updateMessage.bind(this);\n        //this.submitMessage = this.submitMessage.bind(this);\n        this.searchSong = this.searchSong.bind(this);\n        this.getSongInfo = this.getSongInfo.bind(this);\n        this.getInputValue = this.getInputValue.bind(this);\n        this.state = {\n            songs: [],\n            inputValue: ''\n        }\n    }\n\n    getInputValue(e) {\n\n        this.setState({\n            inputValue: e.target.value\n        })\n\n        this.searchSong(e)\n    }\n\n    searchSong(e) {\n\n        let songsArray = []\n\n        const text = this.state.inputValue\n\n        if(e) {\n\n            firebase.database().ref('songs/').orderByChild('name').startAt(text).limitToFirst(10).on('value', songList => {\n                songsArray = []\n                songList.forEach(function(snap) {\n                    let song = snap.val()\n                    let key = snap.key\n    \n                    songsArray.push({\n                        id: key,\n                        anime: song.name,\n                        type: `${song.type} ${song.number}`,\n                        image: song.image,\n                        date: song.date,\n                        inList: song.inList\n                    })\n                })\n    \n                this.setState({\n                    songs: songsArray\n                })\n                \n            })\n\n        }\n        \n    }\n\n    addSongToList(id) {\n\n        firebase.database().ref('songs/' + id).update({\n            inList: true,\n            date: Date.now()\n        })\n    }\n\n    getSongInfo(id, modalType) {\n\n\n        firebase.database().ref('songs/' + id).once(\"value\", function(snapshot) {\n            let key = snapshot.key;\n            let song = snapshot.val();\n\n            if(modalType == 'Editar') {\n\n                document.getElementById('create-anime-text').value = song.name\n                document.getElementById('create-anime-select').value = song.type        \n                document.getElementById('create-anime-number').value = song.number\n            }\n\n            if(modalType == 'Eliminar') {\n                document.getElementById('create-anime-text').textContent = song.name\n                document.getElementById('create-anime-type').textContent = song.type        \n                document.getElementById('create-anime-number').textContent = ' ' + song.number\n            }\n            \n            document.getElementById('create-anime-thumbnail').src = song.image\n            document.getElementById('create-anime-form').style.display = 'flex'\n            document.getElementById('App-search').style.display = 'none'\n            document.getElementById('create-anime-hidden').value = key\n            \n            \n          });\n    }\n\n    handleSubmit = (e) => {\n\n        e.preventDefault(); // Let's stop this event.\n        e.stopPropagation(); // Really this time.\n\n    }\n\n    render(){\n\n        let message = '',\n            styles = {\n                display: 'none',\n                height: '100%',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                padding: '3rem',\n                fontWeight: 100\n\n            };\n\n        console.log(this.state.songs[0],this.state.songs[1])\n\n        if(this.state.songs[0] == undefined){\n            \n            message = 'Las mejores canciones anime en un solo lugar'\n            styles.display = 'flex'\n\n        }else {\n            message = ''\n            styles.display = 'none'\n        }\n\n        return(\n            <section id=\"App-search\" className=\"App-search\">\n                <div className=\"App-search-header\">\n                    <form onSubmit={this.handleSubmit} >\n                        <input id=\"search-song\" onChange={e => this.getInputValue(e)} type=\"text\" placeholder={this.props.fromModalType ? \"Buscar canción...\" : \"Pide una canción...\"} />\n                    </form>\n                </div>\n                <div id=\"container2\" className=\"App-search-body container\">\n                    { \n                        this.state.songs.map( (song,i) => {\n                            return <div onClick={e => {if(this.props.fromModalType){this.getSongInfo(song.id,this.props.fromModalType)}else{this.addSongToList(song.id)}}}><Anime songInList={song.inList} key={i} imageSrc={song.image} animeName={song.anime} songName={song.type} /></div>\n                        })\n                    }\n                    <div className=\"App-search-message\" style={styles}>\n                        <p>{message}</p>\n                        <FontAwesomeIcon icon=\"headphones-alt\" />\n                    </div>\n                </div>\n            </section>\n\n        );\n    }\n}","import React, { Component } from 'react';\n\nimport defaultAnimeImage from '../images/default.png';\n\nimport firebase from './utils/firebase';\n\nexport default class CreateAnime extends Component {\n\n    constructor() {\n        super();\n        //this.updateMessage = this.updateMessage.bind(this);\n        //this.submitMessage = this.submitMessage.bind(this);\n        this.createSong = this.createSong.bind(this);\n    }\n\n    createSong(){\n\n        const songsRef = firebase.database().ref().child('songs'),\n            storage = firebase.storage().ref().child('img')\n\n        let name = document.getElementById('create-anime-text').value,\n            type = document.getElementById('create-anime-select').value,\n            number = document.getElementById('create-anime-number').value,\n            image = document.getElementById('create-anime-image'),\n            itemLoaderCounter = document.getElementById('item-loader-counter'),\n            form = document.getElementById('create-anime-form'),\n            itemLoader = document.getElementById('item-loader')\n\n\n        try {\n            itemLoader.style.display = 'flex'\n    \n        let file = image.files[0],\n            fileRef = storage.child(file.name),\n            uploadImg = fileRef.put(file)\n    \n        uploadImg.on('state_changed', function(snapshot){\n            // Observe state change events such as progress, pause, and resume\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n            itemLoaderCounter.innerText = 'Creando canción...  '+ progress+'%'\n    \n            }, function(error) {\n            itemLoader.style.display = 'none'\n            }, function() {\n            // Handle successful uploads on complete\n            uploadImg.snapshot.ref.getDownloadURL().then( url => {\n    \n                let id = songsRef.push().key,\n                    songData = {\n                        name: name,\n                        type: type,\n                        number: number,\n                        image: url,\n                        inList: true,\n                        date: new Date()\n                    },\n                    updateSong = {}\n            \n                updateSong[`/${id}`] = songData\n                \n                songsRef.update(updateSong)\n                form.reset()\n                itemLoader.style.display = 'none'\n    \n            });\n            });\n    \n        }catch(err){\n            itemLoader.style.display = 'none'\n        }\n\n        console.log('Canción creada')\n\n    }\n\n    render(){\n        return(\n            <div className=\"Create-anime-component\">\n                <form className=\"Create-anime-form\" id=\"create-anime-form\">\n                    <input id=\"create-anime-text\" type='text' placeholder='Nombre del Animu'/>\n                    <select id=\"create-anime-select\">\n                        <option>Opening</option>\n                        <option>Ending</option>\n                    </select>\n                    <input id=\"create-anime-number\" type='number' placeholder='#' />\n                    <input id=\"create-anime-image\" type='file' accept='image/x-png,image/gif,image/jpeg'/>\n                    <div id=\"item-loader\">\n                        <span id=\"item-loader-counter\"></span>\n                    </div>\n                    <input onClick={e => {e.preventDefault();this.createSong()}} type=\"submit\" value=\"Confirmar\"/>\n                </form>\n            </div>\n        );\n    }\n}","import React, { Component } from 'react';\r\n\r\nimport defaultAnimeImage from '../images/default.png';\r\n\r\nimport Search from './search';\r\n\r\nimport firebase from './utils/firebase';\r\n\r\nexport default class EditAnime extends Component {\r\n\r\n    showEditImagePreview(event) {\r\n        document.getElementById('create-anime-thumbnail').src = URL.createObjectURL(event.target.files[0])\r\n    }\r\n\r\n    EditSong() {\r\n\r\n        const songsRef = firebase.database().ref().child('songs'),\r\n            storage = firebase.storage().ref().child('img')\r\n\r\n        let name = document.getElementById('create-anime-text').value,\r\n            type = document.getElementById('create-anime-select').value,\r\n            number = document.getElementById('create-anime-number').value,\r\n            key = document.getElementById('create-anime-hidden').value,\r\n            image = document.getElementById('create-anime-image'),\r\n            itemLoaderCounter = document.getElementById('item-loader-counter'),\r\n            form = document.getElementById('create-anime-form'),\r\n            itemLoader = document.getElementById('item-loader')\r\n\r\n\r\n        try{\r\n            if(image.files.length){\r\n                try {\r\n            \r\n                let file = image.files[0],\r\n                    fileRef = storage.child(file.name),\r\n                    uploadImg = fileRef.put(file)\r\n            \r\n                uploadImg.on('state_changed', function(snapshot){\r\n                    // Observe state change events such as progress, pause, and resume\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    itemLoaderCounter.innerText = 'Editando canción...  '+ progress+'%'\r\n            \r\n                    }, function(error) {\r\n                    itemLoader.style.display = 'none'\r\n                    }, function() {\r\n                    // Handle successful uploads on complete\r\n                    uploadImg.snapshot.ref.getDownloadURL().then( url => {\r\n            \r\n                        let id = key,\r\n                            songData = {\r\n                                name: name,\r\n                                type: type,\r\n                                number: number,\r\n                                image: url\r\n                            },\r\n                            updateSong = {}\r\n                    \r\n                        updateSong[`/${id}`] = songData\r\n                        \r\n                        songsRef.update(updateSong)\r\n                        form.reset()\r\n                        document.getElementById('create-anime-form').style.display = 'none'\r\n                        document.getElementById('App-search').style.display = 'initial'\r\n            \r\n                    });\r\n                    });\r\n            \r\n                }catch(err){\r\n                    itemLoader.innerText = 'Error en subida de archivo'\r\n                }\r\n    \r\n            }else{\r\n                \r\n                try{\r\n\r\n                    firebase.database().ref().child('/songs/' + key).update({\r\n                        name: name,\r\n                        type: type,\r\n                        number: number,\r\n                    })\r\n                }catch(err){\r\n                    console.log('Hay un error')\r\n                }\r\n                \r\n                itemLoader.style.display = 'flex'\r\n                itemLoader.innerText = '✓ Correción exitosa'\r\n    \r\n            }\r\n\r\n            \r\n        }\r\n        catch(err){\r\n            itemLoader.innerText += 'Oops, algo salió mal. Inténtalo luego'\r\n        }\r\n\r\n        console.log('Canción editada')\r\n\r\n    }\r\n\r\n    render(){   \r\n        \r\n        return(\r\n            <div id=\"Edit-component\" className=\"Create-anime-component\">\r\n                <Search fromModalType='Editar' />\r\n                <form className=\"Create-anime-form\" id=\"create-anime-form\">\r\n                    <img id=\"create-anime-thumbnail\" />\r\n                    <label for=\"create-anime-image\">Editar imagen</label>\r\n                    <input onChange={e => {this.showEditImagePreview(e)}}id=\"create-anime-image\" type='file' accept='image/x-png,image/gif,image/jpeg'/>\r\n                    <input id=\"create-anime-text\" type='text' placeholder='Nombre del Animu'/>\r\n                    <select id=\"create-anime-select\">\r\n                        <option>Opening</option>\r\n                        <option>Ending</option>\r\n                    </select>\r\n                    <input id=\"create-anime-number\" type='number' placeholder='#' />\r\n                    <input id=\"create-anime-hidden\" type=\"hidden\" />\r\n                    <input onClick={e => {e.preventDefault();this.EditSong()}} type=\"submit\" value=\"Confirmar\"/>\r\n                    <div id=\"item-loader\">\r\n                        <span id=\"item-loader-counter\"></span>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport defaultAnimeImage from '../images/default.png';\r\n\r\nimport Search from './search';\r\n\r\nimport firebase from './utils/firebase';\r\n\r\nexport default class DeleteAnime extends Component {\r\n\r\n    deleteSong() {\r\n\r\n        const itemLoader = document.getElementById('item-loader'),\r\n            key = document.getElementById('create-anime-hidden').value\r\n\r\n        firebase.database().ref().child('/songs/' + key).remove()\r\n\r\n        itemLoader.style.display = 'flex'\r\n        itemLoader.innerText = '✓ Canción eliminada con éxito'\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div id=\"Edit-component\" className=\"Create-anime-component\">\r\n                <Search fromModalType='Eliminar' />\r\n                <form className=\"Create-anime-form\" id=\"create-anime-form\">\r\n                    <div id=\"create-anime-component-item\">\r\n                        <p id=\"delete-question\">¿Seguro que quieres borrar está canción?</p>\r\n                        <img id=\"create-anime-thumbnail\" />\r\n                        <div>\r\n                            <p id=\"create-anime-text\"></p>\r\n                            <span id=\"create-anime-type\"></span>\r\n                            <span id=\"create-anime-number\"></span>\r\n                        </div>\r\n                    </div>\r\n                    <input id=\"create-anime-hidden\" type=\"hidden\" />\r\n                    <div id=\"create-anime-form-buttons\">\r\n                        <input type=\"button\" value=\"Ahora no, joven\"/>\r\n                        <input onClick={e => {e.preventDefault();this.deleteSong()}} type=\"submit\" value=\"Sí papu\"/>\r\n                    </div>\r\n                    <div id=\"item-loader\">\r\n                        <span id=\"item-loader-counter\"></span>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport logo from '../images/logo.png';\r\nimport userImage from '../images/Angelo.jpg';\r\n\r\nimport CreateAnime from './create'\r\nimport EditAnime from './edit'\r\nimport DeleteAnime from './delete'\r\n\r\nimport Modal from './utils/modal';\r\n\r\nexport default class Admin extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.renderForm = this.renderForm.bind(this);\r\n        this.state = {\r\n            isShowing: false,\r\n            modalType: ''\r\n        }\r\n    }\r\n\r\n    openModalHandler = () => {\r\n        this.setState({\r\n            isShowing: true\r\n        });\r\n\r\n        document.body.style.overflow = 'hidden'\r\n\r\n        const modal = document.getElementsByClassName('modal')\r\n\r\n        for (let i = 0; i < modal.length; i++) {\r\n            modal[i].style.display= 'inherit'\r\n            \r\n        }\r\n    }\r\n\r\n    closeModalHandler = () => {\r\n        this.setState({\r\n            isShowing: false\r\n        });\r\n\r\n        const modal = document.getElementsByClassName('modal')\r\n\r\n        for (let i = 0; i < modal.length; i++) {\r\n            modal[i].style.display= 'none'\r\n            \r\n        }\r\n\r\n        document.body.style.overflow = 'initial'\r\n\r\n        document.getElementById('create-anime-form').style.display = 'none'\r\n        document.getElementById('App-search').style.display = 'block'\r\n    }\r\n\r\n    renderForm(type) {\r\n\r\n        let node;\r\n\r\n        switch(type) {\r\n\r\n            case 'Crear':\r\n                node = <CreateAnime />\r\n                break\r\n            case 'Editar':\r\n                node = <EditAnime />\r\n                break\r\n            case 'Eliminar':\r\n                node = <DeleteAnime />\r\n                break\r\n            default:\r\n                node = ''\r\n        }\r\n\r\n        this.setState({\r\n            formType: node,\r\n            modalType: type\r\n        }, this.openModalHandler())\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            \r\n            <div className=\"App-header Admin-panel\">\r\n                { this.state.isShowing ? <div onClick={this.closeModalHandler} className=\"back-drop\"></div> : null }\r\n                <p className=\"Admin-panel-title\">Admin panel</p>\r\n                <nav>\r\n                    <ul>\r\n                        <a className=\"App-link open-modal-btn\" onClick={e => {this.renderForm('Crear')}}>\r\n                        <FontAwesomeIcon icon=\"plus-square\" />\r\n                        </a>\r\n                        <a className=\"App-link open-modal-btn\" onClick={e => {this.renderForm('Editar')}}><FontAwesomeIcon icon=\"edit\" /></a>\r\n                        <a className=\"App-link open-modal-btn\" onClick={e => {this.renderForm('Eliminar')}}><FontAwesomeIcon icon=\"trash-alt\" /></a>\r\n                    </ul>\r\n                    <p className=\"Admin-panel-name\">\r\n                    <span>Bienvenido, Anghelo</span> <img src={userImage} alt=\"Usuario\" />\r\n                    </p>\r\n                </nav>\r\n                <Modal\r\n                    formType={this.state.formType}\r\n                    modalType={this.state.modalType}\r\n                    show={this.state.isShowing}\r\n                    close={this.closeModalHandler}>\r\n                        Maybe aircrafts fly very high because they don't want to be seen in plane sight?\r\n                </Modal>    \r\n            </div>\r\n\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faHeadphonesAlt, faTimesCircle, faPlusSquare, faTrashAlt, faEdit, faExchangeAlt, faYoutube, faDiscord, faTwitch } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n\nimport './css/App.css';\nimport './css/perfect-scrollbar.css';\nimport PerfectScrollbar from 'perfect-scrollbar';\n\n// Importing local components\nimport Header from './components/header';\nimport Streaming from './components/streaming';\nimport List from './components/list';\nimport Chat from './components/chat';\nimport Search from './components/search';\nimport Admin from './components/admin';\n\n// FontAwesome Icons \nlibrary.add(faTimesCircle);\nlibrary.add(faPlusSquare);\nlibrary.add(faTrashAlt);\nlibrary.add(faEdit);\nlibrary.add(faExchangeAlt);\nlibrary.add(fab);\nlibrary.add(faHeadphonesAlt)\n\n\nclass App extends Component {\n\n  componentDidMount () {\n    const containers = document.getElementsByClassName('container');\n    for (let i = 0; i < containers.length; i++) {\n      const ps = new PerfectScrollbar(containers[i], {\n        wheelSpeed: 2,\n        wheelPropagation: false,\n        minScrollbarLength: 20\n      });\n    }\n    \n\n}\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Admin />\n        <Header />\n        <main>\n          <Streaming />\n          <List />\n          <Chat />\n          <Search />\n        </main>\n        <footer className=\"App-footer\">\n          <p>Anime Sama © 2018 - Amamos las buenas historias</p>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    songs: []\n};\n\nconst reducer = (state=initialState, action) => {\n    const newState = {...state};\n\n    switch(action.type){\n        case 'ADD_SONG_IN_LIST': \n            newState.songs = [];\n            break;\n        \n        case 'REMOVE_SONG_FROM_LIST': \n            newState.songs = [];\n            break;\n    }\n    return newState;\n};\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './components/redux/reducer'\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n<Provider store={ store }>\n    <App />\n</Provider>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}